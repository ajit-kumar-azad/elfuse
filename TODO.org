* DONE Dynamic module skeleton

  - [X] собрать пробный проект, загрузить модуль

    кстати, есть интересная статья у skeeto: [[http://nullprogram.com/blog/2016/11/05/]]

  - [X] вызвать Сишную функцию из лиспа

  - [X] вызвать лисповую функцию из Си

  - [X] функция убийства OS-level треда

  - [X] функция запуска OS-level треда

    - [X] выставлять переменную о том, что тред запущен

    - [X] просто функция

    - [X] возвращать t или nil

    - [X] точка монитрования в виде полного пути к директории (видимо, здесь
      надо думать, как предварительно обрабатывать путь, чтоб он был валиден)

  - [X] вспомогательная функция message (обертка вокруг максового message)

* DONE pthreads

  - [X] пробный запуск треда

  - [X] убийство треда
*
* TODO libfuse thread

  - [X] выделить отдельный файл для всего, связанного непосредственно с libfuse

  - [X] запустить hello world! из емакса

  - [X] передать правильный путь в поток

  - [X] размонтировать при остановке треда

    сейчас почему-то не размонтируется при pthread_cancel

    более того, при закрытии процесса почему-то на срабатывают обработчики
    сигналов. Особенность работы емакса? Или FUSE не очень любит работать в
    отдельном треде?

  - [X] использовать высокоуровневый пример

  - [X] мьютекс на общение Емакса с тредом FUSE

  - [X] READIR -> READY -> NONE

  - [X] отвечать на коллбек в по таймеру

  - [X] вызвать какую-нибудь заготовленную лисповую функцию для сборки списка файлов в директории

  - [X] возвращать список файлов из функции (Emacs vector -> C array)

  - [X] getattr

  - [X] open

  - [X] read

  - [X] use pthread [[https://computing.llnl.gov/tutorials/pthreads/#ConditionVariables][condition variables]] for better performance

  - [X] обработчики со стороны емакса должны быть функциями отдельными

  - [ ] универсальный механизм обмена аргументами и результатами работы запросов между Elfuse и
    Емаксом

  - [ ] оставшиеся коллбеки

  - [ ] еще раз пройтись по коллбеками и закончить интерфейс (например, чтобы можно было атрибуты
    указывать в getattr, в readdir должно быть возможно возвращать ошибку и т.д.)

  - [ ] сменить использовать f == NULL на явный флаг (атомик?) для простоты использования

  - [ ] а не надо ли использовать что-то похитрее для лока? Кастомный loop, например?

  - [ ] остановка треда должна рапортовать об успехе или проблемах

  - [ ] ошибки монтирования должны рапортоваться в Емакс

  - [ ] вообще, надо аккуратней обрабатывать всякие проблемы (тред упал, что-то не запустилось,
    остановка емакса, освобождение ресурсов)

  - [ ] добавить таймаутов на всякие события

  - [ ] прогнать долгосрочную работу

* TODO Emacs Lisp wrapper

  Это надо будет отдельно продумать как станут ясны возможности предыдущего
  этапа.

* TODO Emacs dynamic module helpers

  Вытащить в отдельный файл вспомогательные функции для разработки модулей для
  емакса.

  Внести в проект заголовок емаксовый?

  Убрать всякую левую документацию
